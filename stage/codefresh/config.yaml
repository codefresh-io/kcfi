metadata:
  kind: codefresh
  installer:
    type: helm
    helm:
      chart: codefresh 
      repoUrl: http://charts.codefresh.io/prod
      #version: 

kubernetes:
  namespace: codefresh
  #context: 
  #kubeconfig:

### Firebase secret - set if you use Firebase for log streaming
# firebaseSecret: 
# firebaseUrl: 

global:
  ### Codefresh App domain name. appUrl is manadatory parameter
  appUrl: 
  appProtocol: https
  
  ### external Postgres example
  # postgresSeedJob:
  #   user: postgres
  #   password: ehKrMf6o6R
  #   image: "docker.io/bitnami/postgresql:13.4.0-debian-10-r90"
  # postgresUser: cf_user
  # postgresPassword: fJTFJMGV7sg5E4Bj
  # postgresDatabase: codefresh
  # postgresHostname: my-postgresql.prod.svc.cluster.local
  # postgresPort: 5432

  ### external Redis example
  # redisUrl: my-redis-master.prod.svc.cluster.local
  # redisPort: 6379
  # redisPassword: 6oOhHI8fI5
  
  # runtimeRedisHost: my-redis-master.prod.svc.cluster.local
  # runtimeRedisPassword: 6oOhHI8fI5
  # runtimeRedisPort: 6379
  # runtimeRedisDb: 2

  ### external RabbitMQ example
  # rabbitmqHostname: my-rabbitmq.prod.svc.cluster.local
  # rabbitmqUsername: user
  # rabbitmqPassword: B6BkVSDe1D

  ### external MongoDB example
  # mongodbRootUser: root # privileged user will be used for seed jobs and for automatic user creation
  # mongodbRootPassword: WOIqcSwr0y 
  # mongoURI: mongodb://cfuser:mTiXcU2wafr9@my-mongodb.prod.svc.cluster.local
  # mongoSkipUserCreation: true # optional if 'cfuser' already existing (should have ReadWrite permissions)
  # mongoDeploy: false   # disables deployment of internal mongo service
  # mongodbImage: bitnami/mongodb:4.2.17-debian-10-r79 # image used in seed jobs and pre/post upgrade hooks

  # runtimeMongoURI: mongodb://cfuser:mTiXcU2wafr9@my-mongodb.prod.svc.cluster.local # in case OfflineLogging feature is enabled (i.e. you have no Firebase)

  ### MongoDB with Mutual TLS example
  # mongoTLS: true
  # mongoCaCert: mongodb-ca/ca-cert.pem
  # mongoCaKey: mongodb-ca/ca-key.pem
  
  ### PV storage class for persistent services
  ## If defined, storageClass: <storageClass>
  ## If undefined (the default) or set to null, no storageClass spec is set, choosing the default provisioner
  # storageClass: ""

### TLS secret for Ingress
tls:
  selfSigned: true
  cert: certs/certificate.crt
  key: certs/private.key

### Service Account JSON to pull private Codefresh images
images:
  codefreshRegistrySa: sa.json
  # usePrivateRegistry: false
  # privateRegistry:
  #   address:
  #   username:
  #   password:
  lists:
  - images/images-list

# postgresql:
#   enabled: false ## disable default postgresql subchart installation in case external postgresql service is used

# redis:
#   enabled: false ## disable default redis subchart installation in case external redis service is used

# rabbitmq:
#   enabled: false ## disable default rabbitmq subchart installation in case external rabbitmq service is used

# mongo:
#   enabled: false ## disable default mongodb subchart installation in case external mongodb service is used

### Includes addional configurations
# include:
# - values/openshift.yaml

## Keep false as default!
dbinfra:
  enabled: false
  #storageClass: 