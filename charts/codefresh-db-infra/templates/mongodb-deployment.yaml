apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels: {{ include "labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: codefresh-mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: codefresh-mongodb
    spec:
      {{- $podSecurityContext := (kindIs "invalid" .Values.podSecurityContextOverride) | ternary .Values.mongodb.podSecurityContext .Values.podSecurityContextOverride }}
      {{- if and (kindIs "invalid" $podSecurityContext) (not (.Capabilities.APIVersions.Has "apps.openshift.io/v1"))}}
      securityContext:
        fsGroup: 0
      {{- else }}
      {{- with $podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8}}
      {{- end }}
      {{- end }}
      restartPolicy: Always
      containers:
      - env:
        {{- range $key, $value := .Values.mongodb.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end}}
        name: mongodb
        image: "{{ .Values.mongodb.repository }}:{{ .Values.mongodb.tag }}"
        imagePullPolicy: "{{ .Values.mongodb.pullPolicy }}"
        resources:
{{ toYaml $.Values.mongodb.resources | indent 10 }}
        ports:
        - containerPort: 27017
          protocol: TCP
      {{- if $.Values.persistence }}
        volumeMounts:
            - mountPath: /bitnami/mongodb
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongodb
      {{- end }}
{{ include "nodeSelector" . | indent 8 }}